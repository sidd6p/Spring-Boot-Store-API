# Spring Boot Configuration File Precedence (Highest to Lowest):
#   1. application-{profile}.properties
#   2. application-{profile}.yaml
#   3. application-{profile}.yml
#   4. application.properties
#   5. application.yaml (this file)
#   6. application.yml
#
# Key Rules:
#   - Profile-specific files always override base files
#   - Within same level: .properties > .yaml > .yml
#   - All files load; only overlapping properties are overridden
#
# Active Profile: 'dev' (set below)
#   - Loads: application-dev.yaml (or application-dev.properties if exists)
#   - Properties from profile file override this base file
#   - Example: spring.application.name will be 'store-dev' from dev profile, not 'store'

spring:
  profiles:
    active: dev
  application:
    name: store
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3307}/store_api?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
  jpa:
    show-sql: true  # Show SQL statements in the console for debugging
    hibernate:
      ddl-auto: validate  # Only validate the database schema with entity; do not create, update, or drop tables. Fails if schema mismatches entities.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect  # Use MySQL-specific SQL dialect
  jwt:
    secret: ${JWT_SECRET}
    accessTokenExpiration: 600
    refreshTokenExpiration: 864000
stripe:
  secretKey: ${STRIPE_SECRET_KEY}
  webhookSecret: ${STRIPE_WEBHOOK_SECRET}
  enabled: true
  timeout: 1000
  apiUrl: https://api.stripe.com
  supportedCurrencies:
    - USD
    - EUR
    - GBP
notification:
  gateway: sms
email:
  smtp:
    hostUrl: https://smtp.example.com
    port: 587

# Actuator configuration to expose application info including version
management:
  info:
    build:
      enabled: true
    env:
      enabled: true
  endpoint:
    info:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info,health

# Application info that will be shown in actuator/info endpoint
info:
  app:
    name: '@project.name@'
    version: '@project.version@'
    description: '@project.description@'
    groupId: '@project.groupId@'
    artifactId: '@project.artifactId@'
